<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ext="http://www.ibm.com/xmlns/dde/schema/annotation/ext">
    <xsd:complexType name="com.ibm.ws.logging.binaryTrace">
        <xsd:annotation>
            <xsd:documentation>バイナリー・トレース・オプション。  バイナリー・トレースは、logViewer コマンドを使用して、表示できます。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>バイナリー・トレース</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="50" name="purgeMaxSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>バイナリー・トレース・リポジトリーの最大サイズをメガバイトで指定します。  purgeMaxSize の値に 0 より大きい値が指定されると、リポジトリー・サイズに基づいたクリーンアップが有効になり、そうでない場合は無効になります。値 0 は、制限がないことを意味します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>最大リポジトリー・サイズ</ext:label>
                    <ext:variable>com.ibm.hpel.trace.purgeMaxSize</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="0" name="purgeMinTime" type="hourDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>サーバーによるトレース・レコードの削除が可能になる経過期間を時間数で指定します。  purgeMinTime の値に 0 より大きい値が指定されると、トレース・レコードの経過時間に基づいたクリーンアップが有効になり、そうでない場合は無効になります。値 0 は、制限がないことを意味します。. 正整数の後に時間単位 (時間 (h)) を付けて指定してください。 例えば、12 時間は 12h と指定します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>最小保存時間</ext:label>
                    <ext:variable>com.ibm.hpel.trace.purgeMinTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="fileSwitchTime" use="optional">
            <xsd:annotation>
                <xsd:documentation>指定された時刻で、サーバーが、アクティブ・トレース・ファイルを終了し、新しいファイルを開始します。  fileSwitchTime に値が指定されると、ファイルの切り替えが有効になり、そうでない場合は無効になります。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>ファイルの切り替え時刻</ext:label>
                    <ext:variable>com.ibm.hpel.trace.fileSwitchTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                            <xsd:maxInclusive value="23"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="bufferingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>パフォーマンス向上のため、ディスクにレコードを保存する際に若干の遅延を許可するかどうかを指定します。  bufferingEnabled が true に設定されると、レコードは、ディスクに書き込まれるまで、一時的にメモリー内に保持されます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>出力バッファーの有効化</ext:label>
                    <ext:variable>com.ibm.hpel.trace.bufferingEnabled</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="StopLogging" name="outOfSpaceAction" use="optional">
            <xsd:annotation>
                <xsd:documentation>レコードを保持するファイル・システムに空きスペースがなくなった場合に実行するアクションを指定します。  outOfSpaceAction が「StopLogging」に設定されると、レコードをディスクに書き込みできなくなった時点で、サーバーはトレースを停止します。  この属性が「PurgeOld」に設定されると、新規レコード用のスペースを確保するために、サーバーはバイナリー・トレース・リポジトリーから最も古いレコードを削除しようとします。  この属性が「StopServer」に設定されると、レコードに書き込みできなくなった時点でバイナリー・トレースによってサーバーが停止されます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>データを保管できない場合のアクション</ext:label>
                    <ext:variable>com.ibm.hpel.trace.outOfSpaceAction</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="StopServer">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーを停止する</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="PurgeOld">
                                <xsd:annotation>
                                    <xsd:documentation>古いレコードの削除</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="StopLogging">
                                <xsd:annotation>
                                    <xsd:documentation>ロギングの停止</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.logging.binaryLog">
        <xsd:annotation>
            <xsd:documentation>バイナリー・ログ・オプション。  バイナリー・ログは、logViewer コマンドを使用して、表示できます。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>バイナリー・ログ</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="50" name="purgeMaxSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>バイナリー・ログ・リポジトリーの最大サイズをメガバイトで指定します。  purgeMaxSize の値に 0 より大きい値が指定されると、リポジトリー・サイズに基づいたクリーンアップが有効になり、そうでない場合は無効になります。値 0 は、制限がないことを意味します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>最大リポジトリー・サイズ</ext:label>
                    <ext:variable>com.ibm.hpel.log.purgeMaxSize</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="0" name="purgeMinTime" type="hourDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>サーバーによるログ・レコードの削除が可能になる経過期間を時間数で指定します。  purgeMinTime の値に 0 より大きい値が指定されると、ログ・レコードの経過時間に基づいたクリーンアップが有効になり、そうでない場合は無効になります。値 0 は、制限がないことを意味します。. 正整数の後に時間単位 (時間 (h)) を付けて指定してください。 例えば、12 時間は 12h と指定します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>最小保存時間</ext:label>
                    <ext:variable>com.ibm.hpel.log.purgeMinTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="fileSwitchTime" use="optional">
            <xsd:annotation>
                <xsd:documentation>指定された時刻で、サーバーが、アクティブなログ・ファイルを終了し、新しいログ・ファイルを開始します。  fileSwitchTime に値が指定されると、ファイルの切り替えが有効になり、そうでない場合は無効になります。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>ファイルの切り替え時刻</ext:label>
                    <ext:variable>com.ibm.hpel.log.fileSwitchTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                            <xsd:maxInclusive value="23"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="bufferingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>パフォーマンス向上のため、ディスクにレコードを保存する際に若干の遅延を許可するかどうかを指定します。  bufferingEnabled が true に設定されると、レコードは、ディスクに書き込まれるまで、一時的にメモリー内に保持されます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>出力バッファーの有効化</ext:label>
                    <ext:variable>com.ibm.hpel.log.bufferingEnabled</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="StopLogging" name="outOfSpaceAction" use="optional">
            <xsd:annotation>
                <xsd:documentation>レコードを保持するファイル・システムに空きスペースがなくなった場合に実行するアクションを指定します。  outOfSpaceAction が「StopLogging」に設定されると、レコードをディスクに書き込みできなくなった時点で、サーバーはロギングを停止します。  この属性が「PurgeOld」に設定されると、新規レコード用のスペースを確保するために、サーバーはバイナリー・ログ・リポジトリーから最も古いレコードを削除しようとします。  この属性が「StopServer」に設定されると、レコードに書き込みできなくなった時点でバイナリー・ログによってサーバーが停止されます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>データを保管できない場合のアクション</ext:label>
                    <ext:variable>com.ibm.hpel.log.outOfSpaceAction</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="StopServer">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーを停止する</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="PurgeOld">
                                <xsd:annotation>
                                    <xsd:documentation>古いレコードの削除</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="StopLogging">
                                <xsd:annotation>
                                    <xsd:documentation>ロギングの停止</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.config">
        <xsd:annotation>
            <xsd:documentation>サーバーによる構成情報の処理方法を定義します。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>構成管理</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="WARN" name="onError" use="optional">
            <xsd:annotation>
                <xsd:documentation>構成エラーの発生後に行われる処置。 </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>エラーの場合</ext:label>
                    <ext:variable>onError</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="WARN">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーは、構成エラーが発生すると、警告メッセージおよびエラー・メッセージを出します。 </xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="FAIL">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーは、最初のエラー発生時に警告メッセージまたはエラー・メッセージを出した後、サーバーを停止します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="IGNORE">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーは、構成エラーが発生したときに、警告メッセージおよびエラー・メッセージを出しません。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="500ms" name="monitorInterval" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>サーバーが構成更新をチェックする頻度。. 正整数の後に時間単位 (時間 (h)、分 (m)、秒 (s)、またはミリ秒 (ms)) を付けて指定してください。 例えば、500 ミリ秒は 500ms と指定します。 単一エントリーに複数の値を含めることができます。 例えば、1.5 秒の場合、1s500ms とすることができます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>更新のポーリング・レート</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="polled" name="updateTrigger" use="optional">
            <xsd:annotation>
                <xsd:documentation>構成更新のメソッドまたはトリガー。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>更新トリガー</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="polled">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーは、すべての構成ファイルでの変更をポーリング間隔でスキャンし、検出された変更のあるランタイム構成を更新します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="mbean">
                                <xsd:annotation>
                                    <xsd:documentation>FileNotificationMbean から要求された場合にのみ、サーバーは構成を更新します。FileNotificationMbean は通常、統合開発環境や管理アプリケーションなどの外部プログラムによって呼び出されます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="disabled">
                                <xsd:annotation>
                                    <xsd:documentation>すべての更新モニターを無効にします。 構成変更は、サーバーの実行中は適用されません。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.kernel.metatype.helper.fileset">
        <xsd:annotation>
            <xsd:documentation>ベース・ディレクトリーから開始し、パターン・セットと一致するファイル・セットを指定します。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>ファイル・セット</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="${server.config.dir}" name="dir" type="dirLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>ファイルを検索するベース・ディレクトリー。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>ベース・ディレクトリー</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="caseSensitive" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>検索で大/小文字を区別するかどうかを指示するブール値 (デフォルト: true)。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>大/小文字の区別</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="*" name="includes" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>検索結果に組み込むファイル名パターンのコンマ区切りリストまたはスペース区切りリスト (デフォルト: *)。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>組み込むパターン</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="excludes" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>検索結果から除外するファイル名パターンのコンマ区切りリストまたはスペース区切りリスト。デフォルトでは、除外されるファイルがありません。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>除外するパターン</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0" name="scanInterval" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>ファイルがファイル・セットに追加されたか、ファイル・セットから削除されたかを判別するためのスキャン間隔。 個々のファイルはスキャンされません。 時間間隔の接尾部は、h-時間、m-分、s-秒、および m-ミリ秒 (例えば、2ms または 5s) になります。 スキャン間隔はデフォルトで無効になっています。またスキャン間隔の scanInterval を 0 に設定することで手動で無効にできます。. 正整数の後に時間単位 (時間 (h)、分 (m)、秒 (s)、またはミリ秒 (ms)) を付けて指定してください。 例えば、500 ミリ秒は 500ms と指定します。 単一エントリーに複数の値を含めることができます。 例えば、1.5 秒の場合、1s500ms とすることができます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>スキャン間隔</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.kernel.metatype.helper.fileset-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.kernel.metatype.helper.fileset">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>固有の構成 ID。</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.threading">
        <xsd:annotation>
            <xsd:documentation>Liberty カーネルのデフォルト executor の設定を定義します。デフォルト executor は常に 1 つのみ存在し、これは Liberty ランタイムのみが使用するためのものであり、アプリケーションから直接アクセス可能ではないことに注意してください。executor を構成して利用する必要があるアプリケーションは、代わりに Managed Executor を使用する必要があります。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>executor 管理</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="Default Executor" name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Liberty カーネルのデフォルト executor の名前。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>名前</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="maxThreads" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>executor に関連付けることができるスレッドの最大数。 0 より大きい場合、maxThreads は最小で 4 であり、coreThreads 以上である必要があります。maxThreads が coreThreads よりも小さく設定されている場合、Liberty は coreThreads を maxThreads 値まで減らします。maxThreads の値がゼロ以下の場合、スレッドの最大数は無制限になります。この場合、Liberty kernel が、executor と関連付けるスレッドの数を、定義された上限がない状態で決定します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>最大スレッド数</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="coreThreads" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>executor に関連付けるスレッドのベースラインまたは最小数。executor に関連付けられるスレッドの数は、急速にこの数まで増えます。 この値が 0 より小さい場合、システムのハードウェア・スレッドの数に基づいて計算されるデフォルト値が使用されます。この値が 4 より小さい正数の場合、デフォルト値 4 が使用されます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>コア・スレッド数</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.kernel.feature">
        <xsd:annotation>
            <xsd:documentation>サーバーによるフィーチャーのロード方法を定義します。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>フィーチャー・マネージャー</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="platform" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>プラットフォームは、プログラミング・モデル・バージョン (例えば、「jakartaee-10」) を指定します。 プラットフォームは、バージョンが指定されていないフィーチャーのバージョンを決定します。 </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>プラットフォーム</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="feature" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>サーバーの実行時に使用するフィーチャーを指定します。</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>フィーチャー</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute default="WARN" name="onError" use="optional">
            <xsd:annotation>
                <xsd:documentation>フィーチャーのロードに失敗した後に実行されるアクション。 </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>エラーの場合</ext:label>
                    <ext:variable>onError</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="WARN">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーは、構成エラーが発生すると、警告メッセージおよびエラー・メッセージを出します。 </xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="FAIL">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーは、最初のエラー発生時に警告メッセージまたはエラー・メッセージを出した後、サーバーを停止します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="IGNORE">
                                <xsd:annotation>
                                    <xsd:documentation>サーバーは、構成エラーが発生したときに、警告メッセージおよびエラー・メッセージを出しません。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.logging">
        <xsd:annotation>
            <xsd:documentation>ログ・メッセージとトレース・メッセージの収集と出力を制御します。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>ロギング</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="binaryTrace" type="com.ibm.ws.logging.binaryTrace"/>
            <xsd:element name="binaryLog" type="com.ibm.ws.logging.binaryLog"/>
        </xsd:choice>
        <xsd:attribute default="20" name="maxFileSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>ログ・ファイルの最大サイズ (MB)。このサイズに達すると、ログ・ファイルはロールされます。 Liberty ランタイムは、サイズを基準にしたログのローリングのみを行います。 この属性を無効にするには、値を 0 に設定します。 最大ファイル・サイズは概算です。 デフォルトでは、値は 20 です。 注: maxFileSize は、console.log ファイルには適用されません。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>最大ログ・ファイル・サイズ</ext:label>
                    <ext:variable>com.ibm.ws.logging.max.file.size</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="2" name="maxFiles" use="optional">
            <xsd:annotation>
                <xsd:documentation>保持されるログ・ファイルの最大数。これを超えると、一番古いファイルが削除されます。値 0 は無制限を表します。 強制最大ファイル・サイズが存在する場合、この設定を使用して、保持する各ログ・ファイルの数を決定します。 この設定は、特定の日に発生した例外を要約した例外ログの数にも適用されます。 従って、この数が 10 の場合、ffdc/ ディレクトリーに 10 個のメッセージ・ログ、10 個のトレース・ログ、および 10 個の例外要約が保持されます。 デフォルトでは、値は 2 です。 注: maxFiles は、console.log ファイルには適用されません。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>最大ログ・ファイル数</ext:label>
                    <ext:variable>com.ibm.ws.logging.max.files</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="${server.output.dir}/logs" name="logDirectory" type="dirLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>この属性を使用して、FFDC を含むすべてのログ・ファイル (ただし、console.log ファイルは除く) のディレクトリーを設定できます。 デフォルトでは、logDirectory は LOG_DIR 環境変数の値に設定されています。 デフォルトの LOG_DIR 環境変数のパスは、WLP_OUTPUT_DIR/serverName/logs です。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、LOG_DIR 環境変数または com.ibm.ws.logging.log.directory プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>ログ・ディレクトリー</ext:label>
                    <ext:variable>com.ibm.ws.logging.log.directory</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="messages.log" name="messageFileName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>メッセージ出力が書き込まれるファイルの名前。これは、構成されたログ・ディレクトリーに対して相対的なものです。 デフォルト値は messages.log です。 このファイルは常に存在し、System.out および System.err に加えて、INFO とその他 (AUDIT、WARNING、ERROR、FAILURE) のメッセージが含まれます。 このログには、タイム・スタンプと発行元スレッド ID も含まれます。 ログ・ファイルがロールオーバーされる場合、古いログ・ファイルの名前の形式は messages_timestamp.log となります。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、com.ibm.ws.logging.message.file.name プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>メッセージ・ファイル名</ext:label>
                    <ext:variable>com.ibm.ws.logging.message.file.name</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="trace.log" name="traceFileName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>トレース出力が書き込まれるファイルの名前。これは、構成されたログ・ディレクトリーに対して相対的なものです。 デフォルト値は trace.log です。 trace.log ファイルは、traceSpecification が INFO 以下のログ・レベルを含んだ設定の場合にのみ作成されます。 stdout は特殊値として認識され、トレースは元の標準出力ストリームに送られます。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、com.ibm.ws.logging.trace.file.name プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>トレース・ファイル名</ext:label>
                    <ext:variable>com.ibm.ws.logging.trace.file.name</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="*=info" name="traceSpecification" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>トレース仕様の文法に従い、各種トレース・コンポーネントの初期状態を指定するトレース仕様。 トレース仕様を使用して、選択的にトレースを有効にします。 空の値も指定可能で、「すべてのトレースを使用不可にする」として処理されます。 指定されていないコンポーネントは、デフォルト状態の *=info に初期設定されます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>トレース仕様</ext:label>
                    <ext:variable>com.ibm.ws.logging.trace.specification</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="hideMessage" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>console.log ファイルおよび messages.log ファイルで非表示にするように構成されたコンマ区切りのメッセージのリスト。 メッセージが非表示になるように設定されている場合、それらのメッセージは trace.log ファイルにリダイレクトされます。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、com.ibm.ws.logging.hideMessage プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>非表示とするメッセージ</ext:label>
                    <ext:variable>com.ibm.ws.logging.hideMessage</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="message" name="messageSource" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>messages.log ファイルに送られる、ソースのコンマ区切りリスト。 このプロパティーは、messageFormat=json の場合にのみ適用されます。 有効な値は、message、trace、accessLog、ffdc、および audit です。 デフォルトでは、messageSource は、環境変数 WLP_LOGGING_MESSAGE_SOURCE (設定されている場合) または message に設定されます。 注: 監査ソースを使用するには、Liberty 監査フィーチャーを有効にします。 httpEndpoint の accessLogging エレメントを設定してアクセス・ログを有効にします。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、WLP_LOGGING_MESSAGE_SOURCE 環境変数または com.ibm.ws.logging.message.source プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>メッセージ・ソース</ext:label>
                    <ext:variable>com.ibm.ws.logging.message.source</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="SIMPLE" name="messageFormat" use="optional">
            <xsd:annotation>
                <xsd:documentation>messages.log ファイルの必須フォーマット。 有効値は SIMPLE または JSON 形式です。 デフォルトでは、messageFormat は、環境変数 WLP_LOGGING_MESSAGE_FORMAT (設定されている場合) または SIMPLE に設定されます。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、WLP_LOGGING_MESSAGE_FORMAT 環境変数または com.ibm.ws.logging.message.format プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>メッセージ形式</ext:label>
                    <ext:variable>com.ibm.ws.logging.message.format</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="SIMPLE">
                                <xsd:annotation>
                                    <xsd:documentation>SIMPLE ロギング形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TBASIC">
                                <xsd:annotation>
                                    <xsd:documentation>tbasic ロギング形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="JSON">
                                <xsd:annotation>
                                    <xsd:documentation>JSON ロギング形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="message" name="consoleSource" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>console/console.log ファイルに送られる、ソースのコンマ区切りリスト。 このプロパティーは、consoleFormat=json の場合にのみ適用されます。 有効な値は、message、trace、accessLog、ffdc、および audit です。 デフォルトでは、consoleSource は、環境変数 WLP_LOGGING_CONSOLE_SOURCE (設定されている場合) または message に設定されます。 注: 監査ソースを使用するには、Liberty 監査フィーチャーを有効にします。 httpEndpoint の accessLogging エレメントを設定してアクセス・ログを有効にします。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、WLP_LOGGING_CONSOLE_SOURCE 環境変数または com.ibm.ws.logging.console.source プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>コンソール・ソース</ext:label>
                    <ext:variable>com.ibm.ws.logging.console.source</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="DEV" name="consoleFormat" use="optional">
            <xsd:annotation>
                <xsd:documentation>コンソールの必須フォーマット。 有効値は DEV、SIMPLE または JSON 形式です。 デフォルトでは、consoleFormat は、環境変数 WLP_LOGGING_CONSOLE_FORMAT (設定されている場合) または DEV に設定されます。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、WLP_LOGGING_CONSOLE_FORMAT 環境変数または com.ibm.ws.logging.console.format プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>コンソール形式</ext:label>
                    <ext:variable>com.ibm.ws.logging.console.format</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="DEV">
                                <xsd:annotation>
                                    <xsd:documentation>DEV ロギング形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="SIMPLE">
                                <xsd:annotation>
                                    <xsd:documentation>SIMPLE ロギング形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TBASIC">
                                <xsd:annotation>
                                    <xsd:documentation>tbasic ロギング形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="JSON">
                                <xsd:annotation>
                                    <xsd:documentation>JSON ロギング形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="ENHANCED" name="traceFormat" use="optional">
            <xsd:annotation>
                <xsd:documentation>この形式は、トレース・ログに使用されます。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、com.ibm.ws.logging.trace.format プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>トレース・フォーマット</ext:label>
                    <ext:variable>com.ibm.ws.logging.trace.format</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="BASIC">
                                <xsd:annotation>
                                    <xsd:documentation>基本トレース形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TBASIC">
                                <xsd:annotation>
                                    <xsd:documentation>基本トレース形式の別名です。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ENHANCED">
                                <xsd:annotation>
                                    <xsd:documentation>拡張基本トレース形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ADVANCED">
                                <xsd:annotation>
                                    <xsd:documentation>拡張トレース形式を使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="isoDateFormat" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>日時は、ロケール固有の形式または ISO-8601 形式を使用します。 この属性の値または同等のプロパティーの値として、true または false を指定できます。 デフォルト値は false です。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、com.ibm.ws.logging.isoDateFormat プロパティーを使用してください。 値 true を指定した場合、messages.log ファイル、trace.log ファイル、および FFDC ログでは ISO-8601 形式が使用されます。 形式は yyyy-MM-dd'T'HH:mm:ss.SSSZ です。 値 false を指定した場合、日時は、システムで設定されているデフォルト・ロケールに従った形式になります。 デフォルト・ロケールが見つからない場合、形式は dd/MMM/yyyy HH:mm:ss:SSS z になります。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>ISO 8601 日付形式を使用</ext:label>
                    <ext:variable>com.ibm.ws.logging.isoDateFormat</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="stackTraceSingleEntry" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>ログ内の単一イベントとして System.out/System.err に書き込まれたスタック・トレースを処理します。 </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>スタック・トレースをログ内の単一イベントとしてフォーマットする</ext:label>
                    <ext:variable>com.ibm.ws.logging.stackTraceSingleEntry</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="AUDIT" name="consoleLogLevel" use="optional">
            <xsd:annotation>
                <xsd:documentation>システム・ストリームに書き込まれるメッセージをフィルターに掛けるために使用されるロギング・レベルです。 有効な値は、INFO、AUDIT、WARNING、ERROR、および OFF です。 デフォルトでは、consoleLogLevel は、WLP_LOGGING_CONSOLE_LOGLEVEL 環境変数 (設定されている場合) または AUDIT に設定されます。 注: この値を変更する前に、「Developer Tools の既知の制約事項」トピック内のセクション「コンソール・ログ・レベル設定を変更した後で、Liberty サーバーと対話できない」の情報を検討してください。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、WLP_LOGGING_CONSOLE_LOGLEVEL 環境変数または com.ibm.ws.logging.console.level プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>コンソール・ログ・レベル</ext:label>
                    <ext:variable>com.ibm.ws.logging.console.log.level</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="INFO">
                                <xsd:annotation>
                                    <xsd:documentation>システム出力ストリームには通知、監査、および警告の各メッセージが書き込まれます。 エラー・メッセージはシステム・エラー・ストリームに書き込まれます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="AUDIT">
                                <xsd:annotation>
                                    <xsd:documentation>システム出力ストリームには、監査および警告の各メッセージが書き込まれます。 エラー・メッセージはシステム・エラー・ストリームに書き込まれます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="WARNING">
                                <xsd:annotation>
                                    <xsd:documentation>システム出力ストリームには、警告メッセージが書き込まれます。 エラー・メッセージはシステム・エラー・ストリームに書き込まれます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ERROR">
                                <xsd:annotation>
                                    <xsd:documentation>エラー・メッセージはシステム・エラー・ストリームに書き込まれます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="OFF">
                                <xsd:annotation>
                                    <xsd:documentation>サーバー出力はシステム・ストリームに書き込まれません。 JVM 出力のみシステム・ストリームに書き込まれます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="copySystemStreams" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>true の場合、System.out ストリームと System.err ストリームに書き込まれるメッセージが、console.log にコピーされます。 false の場合、これらのメッセージは、messages.log または trace.log などの構成済みのログに書き込まれますが、console.log にはコピーされません。 デフォルト値は true です。 トラブルを防ぐために: 始動後に構成を動的に変更しようとしている場合を除き、com.ibm.ws.logging.copy.system.streams プロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>System.out および System.err をシステム・ストリームにコピー</ext:label>
                    <ext:variable>com.ibm.ws.logging.copy.system.streams</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="suppressSensitiveTrace" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>属性をtrueに設定すると、潜在的に機密情報がログ・ファイルおよびトレース・ファイルに公開されなくなります。 デフォルト値は false です。 トラブルの回避:始動後に構成を動的に変更しようとする場合を除き、com.ibm.ws.logging.suppress.sensitive.traceプロパティーを使用してください。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>機密トレースの抑制</ext:label>
                    <ext:variable>com.ibm.ws.logging.suppress.sensitive.trace</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="jsonFieldMappings" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>ログが JSON 形式の場合は、この属性を使用して、デフォルトのフィールド名を新しいフィールド名に置き換えるか、ログからフィールドを除外します。 フィールド名を置き換えるには、defaultFieldName:newFieldName? という形式を使用して、新しいフィールド名を構成します。 指定したソースのログに関連付けられているフィールド名の場合は、[source:]?defaultFieldName:newFieldName? という形式を使用します。ここで、[source] は、指定するソース (message、trace、accessLog など) です。 ログからフィールドを除外するには、置換せずに、例 defaultFieldName: に示すように、フィールド名を指定します。 複数のフィールドの名前を変更したり、除外したりするには、フィールド名マッピングのコンマ区切りのリストを指定します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>置き換えられる JSON フィールド名</ext:label>
                    <ext:variable>com.ibm.ws.logging.json.field.mappings</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="default" name="jsonAccessLogFields" use="optional">
            <xsd:annotation>
                <xsd:documentation>ログが JSON 形式の場合は、この属性を使用して、accessLogging logFormat プロパティーで指定されたアクセス・ログ・フィールドを使用するか、デフォルトのアクセス・ログ・フィールドを使用するかを選択します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>アクセス・ログから使用する JSON フィールド</ext:label>
                    <ext:variable>com.ibm.ws.logging.json.access.log.fields</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="default">
                                <xsd:annotation>
                                    <xsd:documentation>デフォルトのアクセス・ログ・フィールドのセットを使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="logFormat">
                                <xsd:annotation>
                                    <xsd:documentation>logFormat に一致するアクセス・ログ・フィールドのセットを使用します。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="appsWriteJson" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>メッセージ・ログまたはコンソール・ログが JSON 形式の場合、アプリケーションは、JSON 形式のメッセージを変更せずに、それらの宛先に書き込むことができます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>アプリは JSON を書き込むことができる</ext:label>
                    <ext:variable>com.ibm.ws.logging.apps.write.json</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="rolloverStartTime" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>ログの最初のロールオーバーがスケジュールされている時刻。 ロールオーバー間隔の期間は、ロールオーバーの開始時刻から始まります。 有効な値は、HH:MM の 24 時間表記の ISO-8601 日時フォーマット設定に従います。00:00 は午前 0 時を表します。 ゼロを埋め込む必要があります。 rolloverInterval が指定されている場合、rolloverStartTime のデフォルト値は 00:00、真夜中です。 rolloverInterval と rolloverStartTime の両方が指定されていない場合、時間ベースのログ・ロールオーバーは無効になります。 注: rolloverStartTime は console.log ファイルには適用されません。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>時刻ベースのログ・ロールオーバーのロールオーバー開始時刻</ext:label>
                    <ext:variable>com.ibm.ws.logging.rollover.start.time</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="rolloverInterval" type="minuteDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>ログ・ロールオーバー間の時間間隔 (時間単位が指定されていない場合は分単位)。 正整数の後に時間単位 (日 (d)、時間 (h)、または分 (m)) を付けて指定してください。 例えば、5 時間を 5hと指定します。 1 つのエントリーに複数の値を含めることができます。 例えば、1d5h は 1 日と 5 時間に相当します。 rolloverStartTime が指定されている場合、rolloverInterval のデフォルト値は 1 日です。 rolloverInterval と rolloverStartTime の両方が指定されていない場合、時間ベースのログ・ロールオーバーは無効になります。 注: rolloverInterval は console.log ファイルには適用されません。. 正整数の後に時間単位 (時間 (h)、または分 (m)) を付けて指定してください。 例えば、30 分は 30m と指定します。 単一エントリーに複数の値を含めることができます。 例えば、90 分の場合、1h30m とすることができます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>時間ベースのログ・ロールオーバーのロールオーバー間隔</ext:label>
                    <ext:variable>com.ibm.ws.logging.rollover.interval</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="maxFfdcAge" type="minuteDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>FFDC ファイルが削除されるまでの、希望する最大存続時間。 正整数の後に時間単位 (日 (d)、時間 (h)、または分 (m)) を付けて指定してください。 例えば、2 日は 2d と指定します。 1 つのエントリーに複数の値を含めることができます。 例えば、2d6h は 2 日 6 時間に相当します。 毎日午前 0 時になると、最大存続時間に達した FFDC ファイルは削除されます。 デフォルトでは、FFDC ファイルはファイルの存続時間に基づいて削除されることはありません。. 正整数の後に時間単位 (時間 (h)、または分 (m)) を付けて指定してください。 例えば、30 分は 30m と指定します。 単一エントリーに複数の値を含めることができます。 例えば、90 分の場合、1h30m とすることができます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>FFDC ファイルが削除されるまでの最大存続時間</ext:label>
                    <ext:variable>com.ibm.ws.logging.max.ffdc.age</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:simpleType name="variableType">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value=".*$\{[^\s\}]*\}.*"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="location">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="hourDuration">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="booleanType">
        <xsd:union memberTypes="xsd:boolean variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="duration">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="dirLocation">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="intType">
        <xsd:union memberTypes="xsd:int variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="minuteDuration">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="factoryIdType">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:simpleType name="schemaPropertiesType">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:complexType name="includeType">
        <xsd:annotation>
            <xsd:documentation>サーバーの構成の中に含める構成リソースを指定します。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>インクルード</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:attribute default="false" name="optional" type="xsd:boolean" use="optional">
            <xsd:annotation>
                <xsd:documentation>インクルードされたリソースが見つからない場合、スキップすることを許可します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>リソースはオプション</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="location" type="location" use="required">
            <xsd:annotation>
                <xsd:documentation>リソース・ロケーションを指定します。 値は、リモート・リソースのファイル・パス、ディレクトリー、または URI にすることができます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>ロケーション</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="MERGE" name="onConflict" use="optional">
            <xsd:annotation>
                <xsd:documentation>競合が検出された際にエレメントをマージするのに使用する動作を指定します。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>競合時</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="MERGE">
                                <xsd:annotation>
                                    <xsd:documentation>競合しているエレメントがマージされます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="REPLACE">
                                <xsd:annotation>
                                    <xsd:documentation>エレメントが競合するとき、その競合するエレメントが、含まれるファイル内のエレメントによって置き換えられます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="IGNORE">
                                <xsd:annotation>
                                    <xsd:documentation>含まれるファイル内の競合するエレメントは無視されます。</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="variableDefinitionType">
        <xsd:annotation>
            <xsd:documentation>変数の名前と値を指定することにより、新しい変数を宣言します。</xsd:documentation>
            <xsd:appinfo>
                <ext:label>変数宣言</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>変数の名前です。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>名前</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="value" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>変数に割り当てる値。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>値</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="defaultValue" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>使用可能な値がない場合は、defaultValue が variable に割り当てられます。</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>デフォルト値</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="serverType">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="include" type="includeType"/>
            <xsd:element name="variable" type="variableDefinitionType"/>
            <xsd:element name="config" type="com.ibm.ws.config"/>
            <xsd:element name="fileset" type="com.ibm.ws.kernel.metatype.helper.fileset-factory"/>
            <xsd:element name="executor" type="com.ibm.ws.threading"/>
            <xsd:element name="featureManager" type="com.ibm.ws.kernel.feature"/>
            <xsd:element name="logging" type="com.ibm.ws.logging"/>
        </xsd:choice>
        <xsd:attribute name="description" type="xsd:string" use="optional"/>
    </xsd:complexType>
    <xsd:element name="client" type="serverType"/>
    <xsd:element name="server" type="serverType"/>
</xsd:schema>
